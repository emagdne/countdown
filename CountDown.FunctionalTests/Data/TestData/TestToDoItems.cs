using System;
using System.Collections.Generic;
using CountDown.FunctionalTests.Data.Exceptions;
using CountDown.WebTestingFramework;

namespace CountDown.FunctionalTests.Data.TestData
{
    /// <summary>
    /// <para>Author: Jordan Brown</para>
    /// <para>Version: 5/1/14</para>
    /// </summary>
    public static class TestToDoItems
    {
        public static TestToDoItem AssignedToAndOwnedByPrimaryUser { get; set; }
        public static TestToDoItem AssignedToPrimaryUserAndOwnedBySecondaryUser { get; set; }
        public static TestToDoItem AssignedToSecondaryUserOwnedByPrimaryUser { get; set; }
        public static TestToDoItem AssignedToAndOwnerBySecondaryUser { get; set; }
        public static TestToDoItem CompletedToDoItem { get; set; }

        public static List<TestToDoItem> ToDoItems { get; private set; }

        public static void SetUp()
        {
            if (TestUsers.PrimaryUser == null || TestUsers.SecondaryUser == null)
            {
                throw new MissingDependencyException(
                    "TestToDoItems requires the PrimaryUser and SecondaryUser properties in TestUsers to be setup.");
            }

            ToDoItems = new List<TestToDoItem>
            {
                new TestToDoItem
                {
                    Title = "Test To-Do Item - Delete Me!",
                    Description = "Test To-Do Item Generated By TestToDoItems.cs - Delete Me!",
                    Start = DateTime.Now,
                    Due = DateTime.Now.AddDays(1),
                    AssigneeId = TestUsers.PrimaryUser.Id,
                    Assignee = TestUsers.PrimaryUser,
                    OwnerId = TestUsers.PrimaryUser.Id,
                    Owner = TestUsers.PrimaryUser
                },
                new TestToDoItem
                {
                    Title = "Test To-Do Item - Delete Me!",
                    Description = "Test To-Do Item Generated By TestToDoItems.cs - Delete Me!",
                    Start = DateTime.Now,
                    Due = DateTime.Now.AddDays(1),
                    AssigneeId = TestUsers.PrimaryUser.Id,
                    Assignee = TestUsers.PrimaryUser,
                    OwnerId = TestUsers.SecondaryUser.Id,
                    Owner = TestUsers.SecondaryUser
                },
                new TestToDoItem
                {
                    Title = "Test To-Do Item - Delete Me!",
                    Description = "Test To-Do Item Generated By TestToDoItems.cs - Delete Me!",
                    Start = DateTime.Now,
                    Due = DateTime.Now.AddDays(1),
                    AssigneeId = TestUsers.SecondaryUser.Id,
                    Assignee = TestUsers.SecondaryUser,
                    OwnerId = TestUsers.PrimaryUser.Id,
                    Owner = TestUsers.PrimaryUser
                },
                new TestToDoItem
                {
                    Title = "Test To-Do Item - Delete Me!",
                    Description = "Test To-Do Item Generated By TestToDoItems.cs - Delete Me!",
                    Start = DateTime.Now,
                    Due = DateTime.Now.AddDays(1),
                    AssigneeId = TestUsers.SecondaryUser.Id,
                    Assignee = TestUsers.SecondaryUser,
                    OwnerId = TestUsers.SecondaryUser.Id,
                    Owner = TestUsers.SecondaryUser
                },
                new TestToDoItem
                {
                    Title = "Test To-Do Item - Delete Me!",
                    Description = "Test To-Do Item Generated By TestToDoItems.cs - Delete Me!",
                    Start = DateTime.Now,
                    Due = DateTime.Now.AddDays(1),
                    AssigneeId = TestUsers.PrimaryUser.Id,
                    Assignee = TestUsers.PrimaryUser,
                    OwnerId = TestUsers.PrimaryUser.Id,
                    Owner = TestUsers.PrimaryUser,
                    Completed = true
                }
            };

            foreach (var toDoItem in ToDoItems)
            {
                toDoItem.Id = CountDownDatabase.CreateToDoItem(toDoItem.Title, toDoItem.Description, toDoItem.Start,
                    toDoItem.Due, toDoItem.AssigneeId, toDoItem.OwnerId, toDoItem.Completed);
            }

            AssignedToAndOwnedByPrimaryUser = ToDoItems[0];
            AssignedToPrimaryUserAndOwnedBySecondaryUser = ToDoItems[1];
            AssignedToSecondaryUserOwnedByPrimaryUser = ToDoItems[2];
            AssignedToAndOwnerBySecondaryUser = ToDoItems[3];
            CompletedToDoItem = ToDoItems[4];
        }

        public static void CleanUp()
        {
            foreach (var toDoItem in ToDoItems)
            {
                CountDownDatabase.DeleteToDoItem(toDoItem.Id);
            }

            AssignedToAndOwnedByPrimaryUser = null;
            AssignedToPrimaryUserAndOwnedBySecondaryUser = null;
            AssignedToSecondaryUserOwnedByPrimaryUser = null;
            AssignedToAndOwnerBySecondaryUser = null;
            CompletedToDoItem = null;
            ToDoItems = null;
        }
    }
}